-- sql/init_schema.sql

-- 1) Users
CREATE TABLE users (
  user_id        NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
  username       VARCHAR2(50) UNIQUE NOT NULL,
  password_hash  BLOB             NOT NULL,
  email          VARCHAR2(100),
  role           VARCHAR2(20)     NOT NULL,  -- 'ADMIN' or 'STUDENT'
  status         VARCHAR2(20)     DEFAULT 'PENDING',
  created_at     DATE             DEFAULT SYSDATE
);

-- 2) Students
CREATE TABLE students (
  student_id      NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
  user_id         NUMBER UNIQUE NOT NULL,
  department      VARCHAR2(100),
  year            NUMBER,
  max_books_term  NUMBER DEFAULT 5,
  borrow_count    NUMBER DEFAULT 0,
  FOREIGN KEY (user_id) REFERENCES users(user_id)
);

-- 3) Terms
CREATE TABLE terms (
  term_id     NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
  name        VARCHAR2(50) NOT NULL,
  start_date  DATE         NOT NULL,
  end_date    DATE         NOT NULL
);

-- 4) Categories
CREATE TABLE categories (
  category_id   NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
  name          VARCHAR2(100) UNIQUE NOT NULL,
  description   VARCHAR2(4000)
);

-- 5) Books
CREATE TABLE books (
  book_id         NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
  title           VARCHAR2(200) NOT NULL,
  author          VARCHAR2(200),
  isbn            VARCHAR2(20),
  category_id     NUMBER        NOT NULL,
  cover_blob      BLOB,
  pdf_blob        BLOB,
  total_copies    NUMBER DEFAULT 1,
  available_copies NUMBER DEFAULT 1,
  uploaded_by     NUMBER,
  upload_date     DATE   DEFAULT SYSDATE,
  FOREIGN KEY (category_id) REFERENCES categories(category_id),
  FOREIGN KEY (uploaded_by)  REFERENCES users(user_id)
);

-- 6) Borrow Transactions
CREATE TABLE borrow_txns (
  txn_id       NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
  student_id   NUMBER NOT NULL,
  book_id      NUMBER NOT NULL,
  term_id      NUMBER NOT NULL,
  borrow_date  DATE   DEFAULT SYSDATE,
  due_date     DATE,
  return_date  DATE,
  status       VARCHAR2(20) DEFAULT 'OUT',
  FOREIGN KEY (student_id) REFERENCES students(student_id),
  FOREIGN KEY (book_id)    REFERENCES books(book_id),
  FOREIGN KEY (term_id)    REFERENCES terms(term_id)
);

-- 7) Reservations
CREATE TABLE reservations (
  res_id         NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
  student_id     NUMBER NOT NULL,
  book_id        NUMBER NOT NULL,
  request_date   DATE   DEFAULT SYSDATE,
  notified_date  DATE,
  status         VARCHAR2(20) DEFAULT 'PENDING',
  FOREIGN KEY (student_id) REFERENCES students(student_id),
  FOREIGN KEY (book_id)    REFERENCES books(book_id)
);

-- 8) Download & Read Logs
CREATE TABLE download_logs (
  log_id      NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
  student_id  NUMBER NOT NULL,
  book_id     NUMBER NOT NULL,
  log_time    DATE   DEFAULT SYSDATE,
  FOREIGN KEY (student_id) REFERENCES students(student_id),
  FOREIGN KEY (book_id)    REFERENCES books(book_id)
);

CREATE TABLE read_logs (
  log_id      NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
  student_id  NUMBER NOT NULL,
  book_id     NUMBER NOT NULL,
  log_time    DATE   DEFAULT SYSDATE,
  FOREIGN KEY (student_id) REFERENCES students(student_id),
  FOREIGN KEY (book_id)    REFERENCES books(book_id)
);

-- 9) Fines
CREATE TABLE fines (
  fine_id     NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
  txn_id      NUMBER NOT NULL,
  amount      NUMBER(8,2) NOT NULL,
  paid_flag   CHAR(1) DEFAULT 'N',
  FOREIGN KEY (txn_id) REFERENCES borrow_txns(txn_id)
);

-- 10) Audit Logs
CREATE TABLE audit_logs (
  audit_id    NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
  user_id     NUMBER,
  action      VARCHAR2(100),
  object_type VARCHAR2(50),
  object_id   NUMBER,
  ts          DATE DEFAULT SYSDATE
);

COMMIT;
